#!/bin/bash

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
DIR="pokemon_data"
ERRORS="errors.txt"
mkdir -p "$DIR"

pids=()

# Cleanup function to kill all background jobs on exit
cleanup() {
    echo "Cleaning up background jobs..."
    for pid in "${pids[@]}"; do
        if kill -0 "$pid" 2>/dev/null; then
            echo "Killing process $pid"
            kill "$pid"
        fi
    done
    exit 1
}

# Trap SIGINT (Ctrl+C) to run cleanup
trap cleanup SIGINT

fetch_pokemon() {
    local p=$1
    local url="https://pokeapi.co/api/v2/pokemon/$p"
    local output_file="$DIR/$p.json"

    tries=0
    success=0
    while [ $tries -lt 3 ]; do
        if curl -s -o "$output_file" "$url"; then
            echo "Saved data to $output_file ✅"
            success=1
            break
        else
            ((tries++))
            echo "Retrying $p ($tries/3)..."
            sleep 1
        fi
    done

    if [ $success -ne 1 ]; then
        echo "$(date) - Failed to fetch data for $p after 3 attempts." >> "$ERRORS"
    fi
}

for p in "${POKEMON_LIST[@]}"; do
    echo "Fetching data for $p..."
    fetch_pokemon "$p" &
    pids+=($!)  # store PID of background job
done

# Wait for all background processes to complete
for pid in "${pids[@]}"; do
    wait "$pid"
done

echo "All Pokémon data fetched."
